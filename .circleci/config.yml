# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

executors:
  docker-publisher:
    environment:
      IMAGE_NAME: metalbreaker90/reactive-messaging-dlq

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build-and-test:
    # These next lines define a Docker executor: https://circleci.com/docs/2.0/executor-types/
    # You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # Be sure to update the Docker image tag below to openjdk version of your application.
    # A list of available CircleCI Docker Convenience Images are available here: https://circleci.com/developer/images/image/cimg/openjdk
    docker:
      - image: cimg/openjdk:11.0
        auth:
          username: $DOCKER_HUB_USERNAME
          password: $DOCKER_HUB_PASSWORD


    environment:
      MAVEN_OPTS: -Xmx6400m
      # Set the GRAALVM_HOME env variabile to the location where we be installing GraalVM
      GRAALVM_HOME: /home/circleci/project/.graalvm
      GRAALVM_VERSION: 21.3.0
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      # Checkout the code as the first step.
      - checkout
      - setup_remote_docker:
          version: 20.10.11
      # Install GraalVM
      - run:
          name: Install GraalVM
          command: curl https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-${GRAALVM_VERSION}/graalvm-ce-java11-linux-amd64-${GRAALVM_VERSION}.tar.gz -O -J -L && tar xfz graalvm-ce-java11-linux-amd64-${GRAALVM_VERSION}.tar.gz && mv graalvm-ce-java11-${GRAALVM_VERSION} .graalvm && rm graalvm-ce-java11-linux-amd64-${GRAALVM_VERSION}.tar.gz
      # Install native-image
      - run:
          name: Install native-image
          command: $GRAALVM_HOME/bin/gu install native-image
      - run:
          name: Make mvnw executable
          command: chmod +x mvnw
      - run:
          name: Build (Native)
          command: ./mvnw clean package -Pnative -DskipTest -Dmavet.test.skip=true
          no_output_timeout: 30m
      - run:
          name: Verify (Native)
          command: ./mvnw verify -Pnative
          no_output_timeout: 30m
      - run:
          name: Create Docker Image
          command: docker build -f src/main/docker/Dockerfile.native -t metalbreaker90/reactive-messaging-dlq .
      - run:
          name: Docker Hub login
          command: docker login -u="${DOCKER_HUB_USERNAME}" -p="${DOCKER_HUB_PASSWORD}"
      - run:
          name: Push image on DockerHub
          command: docker push metalbreaker90/reactive-messaging-dlq

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  sample: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - build-and-test:
          context:
            - docker-hub-context